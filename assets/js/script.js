/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/src/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/src/app.js":
/*!******************************!*\
  !*** ./assets/js/src/app.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sticky_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sticky-js */ \"./node_modules/sticky-js/index.js\");\n/* harmony import */ var sticky_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sticky_js__WEBPACK_IMPORTED_MODULE_0__);\n/* global tiAboutPageObject */\n\nvar stickyMenu = new sticky_js__WEBPACK_IMPORTED_MODULE_0___default.a('.ti-about-tablist', {\n  marginTop: 32,\n  stickyClass: 'stickied'\n});\n\nfunction hashTabs() {\n  var hash = window.location.hash;\n\n  if (hash !== null) {\n    var tab = document.querySelector('a.tab[href=\"' + hash + '\"]');\n\n    if (tab === null) {\n      return false;\n    }\n\n    tab.click();\n  }\n}\n\nfunction handleTabs() {\n  var links = document.querySelectorAll('.ti-about-tablist a.tab');\n\n  var _loop = function _loop(i) {\n    links[i].addEventListener('click', function (event) {\n      event.preventDefault();\n      var active = document.querySelector('.tab-content.active'),\n          newTabId = event.target.getAttribute('href');\n      window.location.hash = newTabId;\n\n      if (active !== null) {\n        active.classList.remove('active');\n\n        for (var _i = 0; _i < links.length; _i++) {\n          links[_i].classList.remove('active');\n        }\n      }\n\n      links[i].classList.add('active');\n      document.querySelector(newTabId).classList.add('active');\n    });\n  };\n\n  for (var i = 0; i < links.length; i++) {\n    _loop(i);\n  }\n}\n\nfunction handleLinkingInTabs() {\n  var linksToSelf = document.querySelectorAll('#about-tabs > div a[href^=\\'#\\']');\n\n  for (var i = 0; i < linksToSelf.length; i++) {\n    linksToSelf[i].addEventListener('click', function (event) {\n      event.preventDefault();\n      console.log('clcj');\n      var index = event.target.getAttribute('href').substr(1);\n      var clickEvent = new Event('click');\n      document.querySelector('li[data-tab-id=\"' + index + '\"] a.tab').dispatchEvent(clickEvent);\n      return false;\n    });\n  }\n}\n/* Show required actions next to page title and tab title */\n\n\nfunction addRequiredActionsBadge() {\n  if (tiAboutPageObject.nr_actions_required > 0) {\n    var badge = document.createElement('span'),\n        recommendedTab = document.querySelector('.tab.recommended_actions');\n    badge.classList.add('badge-action-count');\n    badge.innerText = tiAboutPageObject.nr_actions_required;\n    recommendedTab.appendChild(badge);\n  }\n}\n/**\n * Run JS on load.\n */\n\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  handleTabs();\n  hashTabs();\n  addRequiredActionsBadge();\n  handleLinkingInTabs();\n}); // Legacy code in jQuery.\n\n/* global console */\n\njQuery(document).ready(function () {\n  jQuery('.ti-about-page-required-action-button').click(function () {\n    var plugin_slug = jQuery(this).attr('data-slug');\n    var card = jQuery('.' + plugin_slug);\n    jQuery.ajax({\n      type: 'POST',\n      data: {\n        action: 'update_recommended_plugins_visibility',\n        slug: plugin_slug,\n        nonce: tiAboutPageObject.nonce\n      },\n      url: tiAboutPageObject.ajaxurl,\n      beforeSend: function beforeSend() {\n        jQuery(card).fadeOut();\n      },\n      success: function success(response) {\n        console.log(response.required_actions);\n\n        if (response.required_actions === 0) {\n          jQuery('#about-tabs #recommended_actions, [data-tab-id=\"recommended_actions\"], #adminmenu .wp-submenu li a span.badge-action-count').fadeOut().remove();\n          jQuery('#about-tabs ul > li:first-child a').click();\n        }\n\n        jQuery(card).remove();\n        jQuery('#about-tabs ul li > .recommended_actions span, #adminmenu .wp-submenu li a span.badge-action-count').text(response.required_actions);\n      },\n      error: function error(jqXHR, textStatus, errorThrown) {\n        jQuery(card).fadeIn();\n        console.log(jqXHR + ' :: ' + textStatus + ' :: ' + errorThrown);\n      }\n    });\n  }); // Remove activate button and replace with activation in progress button.\n\n  jQuery(document).on('DOMNodeInserted', '.activate-now', function () {\n    var activateButton = jQuery(this);\n\n    if (activateButton.length) {\n      var url = jQuery(activateButton).attr('href');\n\n      if (typeof url !== 'undefined') {\n        // Request plugin activation.\n        jQuery.ajax({\n          beforeSend: function beforeSend() {\n            jQuery(activateButton).replaceWith('<a class=\"button updating-message\">' + tiAboutPageObject.activating_string + '...</a>');\n          },\n          async: true,\n          type: 'GET',\n          url: url,\n          success: function success() {\n            // Reload the page.\n            location.reload();\n          }\n        });\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack:///./assets/js/src/app.js?");

/***/ }),

/***/ "./node_modules/sticky-js/dist/sticky.compile.js":
/*!*******************************************************!*\
  !*** ./node_modules/sticky-js/dist/sticky.compile.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Sticky.js\n * Library for sticky elements written in vanilla javascript. With this library you can easily set sticky elements on your website. It's also responsive.\n *\n * @version 1.2.0\n * @author Rafal Galus <biuro@rafalgalus.pl>\n * @website https://rgalus.github.io/sticky-js/\n * @repo https://github.com/rgalus/sticky-js\n * @license https://github.com/rgalus/sticky-js/blob/master/LICENSE\n */\n\n\nvar Sticky = function () {\n  /**\n   * Sticky instance constructor\n   * @constructor\n   * @param {string} selector - Selector which we can find elements\n   * @param {string} options - Global options for sticky elements (could be overwritten by data-{option}=\"\" attributes)\n   */\n  function Sticky() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Sticky);\n\n    this.selector = selector;\n    this.elements = [];\n    this.version = '1.2.0';\n    this.vp = this.getViewportSize();\n    this.body = document.querySelector('body');\n    this.options = {\n      wrap: options.wrap || false,\n      marginTop: options.marginTop || 0,\n      stickyFor: options.stickyFor || 0,\n      stickyClass: options.stickyClass || null,\n      stickyContainer: options.stickyContainer || 'body'\n    };\n    this.updateScrollTopPosition = this.updateScrollTopPosition.bind(this);\n    this.updateScrollTopPosition();\n    window.addEventListener('load', this.updateScrollTopPosition);\n    window.addEventListener('scroll', this.updateScrollTopPosition);\n    this.run();\n  }\n  /**\n   * Function that waits for page to be fully loaded and then renders & activates every sticky element found with specified selector\n   * @function\n   */\n\n\n  Sticky.prototype.run = function run() {\n    var _this = this; // wait for page to be fully loaded\n\n\n    var pageLoaded = setInterval(function () {\n      if (document.readyState === 'complete') {\n        clearInterval(pageLoaded);\n        var elements = document.querySelectorAll(_this.selector);\n\n        _this.forEach(elements, function (element) {\n          return _this.renderElement(element);\n        });\n      }\n    }, 10);\n  };\n  /**\n   * Function that assign needed variables for sticky element, that are used in future for calculations and other\n   * @function\n   * @param {node} element - Element to be rendered\n   */\n\n\n  Sticky.prototype.renderElement = function renderElement(element) {\n    var _this2 = this; // create container for variables needed in future\n\n\n    element.sticky = {}; // set default variables\n\n    element.sticky.active = false;\n    element.sticky.marginTop = parseInt(element.getAttribute('data-margin-top')) || this.options.marginTop;\n    element.sticky.stickyFor = parseInt(element.getAttribute('data-sticky-for')) || this.options.stickyFor;\n    element.sticky.stickyClass = element.getAttribute('data-sticky-class') || this.options.stickyClass;\n    element.sticky.wrap = element.hasAttribute('data-sticky-wrap') ? true : this.options.wrap; // @todo attribute for stickyContainer\n    // element.sticky.stickyContainer = element.getAttribute('data-sticky-container') || this.options.stickyContainer;\n\n    element.sticky.stickyContainer = this.options.stickyContainer;\n    element.sticky.container = this.getStickyContainer(element);\n    element.sticky.container.rect = this.getRectangle(element.sticky.container);\n    element.sticky.rect = this.getRectangle(element); // fix when element is image that has not yet loaded and width, height = 0\n\n    if (element.tagName.toLowerCase() === 'img') {\n      element.onload = function () {\n        return element.sticky.rect = _this2.getRectangle(element);\n      };\n    }\n\n    if (element.sticky.wrap) {\n      this.wrapElement(element);\n    } // activate rendered element\n\n\n    this.activate(element);\n  };\n  /**\n   * Wraps element into placeholder element\n   * @function\n   * @param {node} element - Element to be wrapped\n   */\n\n\n  Sticky.prototype.wrapElement = function wrapElement(element) {\n    element.insertAdjacentHTML('beforebegin', '<span></span>');\n    element.previousSibling.appendChild(element);\n  };\n  /**\n   * Function that activates element when specified conditions are met and then initalise events\n   * @function\n   * @param {node} element - Element to be activated\n   */\n\n\n  Sticky.prototype.activate = function activate(element) {\n    if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n      element.sticky.active = true;\n    }\n\n    if (this.elements.indexOf(element) < 0) {\n      this.elements.push(element);\n    }\n\n    if (!element.sticky.resizeEvent) {\n      this.initResizeEvents(element);\n      element.sticky.resizeEvent = true;\n    }\n\n    if (!element.sticky.scrollEvent) {\n      this.initScrollEvents(element);\n      element.sticky.scrollEvent = true;\n    }\n\n    this.setPosition(element);\n  };\n  /**\n   * Function which is adding onResizeEvents to window listener and assigns function to element as resizeListener\n   * @function\n   * @param {node} element - Element for which resize events are initialised\n   */\n\n\n  Sticky.prototype.initResizeEvents = function initResizeEvents(element) {\n    var _this3 = this;\n\n    element.sticky.resizeListener = function () {\n      return _this3.onResizeEvents(element);\n    };\n\n    window.addEventListener('resize', element.sticky.resizeListener);\n  };\n  /**\n   * Removes element listener from resize event\n   * @function\n   * @param {node} element - Element from which listener is deleted\n   */\n\n\n  Sticky.prototype.destroyResizeEvents = function destroyResizeEvents(element) {\n    window.removeEventListener('resize', element.sticky.resizeListener);\n  };\n  /**\n   * Function which is fired when user resize window. It checks if element should be activated or deactivated and then run setPosition function\n   * @function\n   * @param {node} element - Element for which event function is fired\n   */\n\n\n  Sticky.prototype.onResizeEvents = function onResizeEvents(element) {\n    this.vp = this.getViewportSize();\n    element.sticky.rect = this.getRectangle(element);\n    element.sticky.container.rect = this.getRectangle(element.sticky.container);\n\n    if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n      element.sticky.active = true;\n    } else if (element.sticky.rect.top + element.sticky.rect.height >= element.sticky.container.rect.top + element.sticky.container.rect.height || element.sticky.stickyFor >= this.vp.width && element.sticky.active) {\n      element.sticky.active = false;\n    }\n\n    this.setPosition(element);\n  };\n  /**\n   * Function which is adding onScrollEvents to window listener and assigns function to element as scrollListener\n   * @function\n   * @param {node} element - Element for which scroll events are initialised\n   */\n\n\n  Sticky.prototype.initScrollEvents = function initScrollEvents(element) {\n    var _this4 = this;\n\n    element.sticky.scrollListener = function () {\n      return _this4.onScrollEvents(element);\n    };\n\n    window.addEventListener('scroll', element.sticky.scrollListener);\n  };\n  /**\n   * Removes element listener from scroll event\n   * @function\n   * @param {node} element - Element from which listener is deleted\n   */\n\n\n  Sticky.prototype.destroyScrollEvents = function destroyScrollEvents(element) {\n    window.removeEventListener('scroll', element.sticky.scrollListener);\n  };\n  /**\n   * Function which is fired when user scroll window. If element is active, function is invoking setPosition function\n   * @function\n   * @param {node} element - Element for which event function is fired\n   */\n\n\n  Sticky.prototype.onScrollEvents = function onScrollEvents(element) {\n    if (element.sticky.active) {\n      this.setPosition(element);\n    }\n  };\n  /**\n   * Main function for the library. Here are some condition calculations and css appending for sticky element when user scroll window\n   * @function\n   * @param {node} element - Element that will be positioned if it's active\n   */\n\n\n  Sticky.prototype.setPosition = function setPosition(element) {\n    this.css(element, {\n      position: '',\n      width: '',\n      top: '',\n      left: ''\n    });\n\n    if (this.vp.height < element.sticky.rect.height || !element.sticky.active) {\n      return;\n    }\n\n    if (!element.sticky.rect.width) {\n      element.sticky.rect = this.getRectangle(element);\n    }\n\n    if (element.sticky.wrap) {\n      this.css(element.parentNode, {\n        display: 'block',\n        width: element.sticky.rect.width + 'px',\n        height: element.sticky.rect.height + 'px'\n      });\n    }\n\n    if (element.sticky.rect.top === 0 && element.sticky.container === this.body) {\n      this.css(element, {\n        position: 'fixed',\n        top: element.sticky.rect.top + 'px',\n        left: element.sticky.rect.left + 'px',\n        width: element.sticky.rect.width + 'px'\n      });\n    } else if (this.scrollTop > element.sticky.rect.top - element.sticky.marginTop) {\n      this.css(element, {\n        position: 'fixed',\n        width: element.sticky.rect.width + 'px',\n        left: element.sticky.rect.left + 'px'\n      });\n\n      if (this.scrollTop + element.sticky.rect.height + element.sticky.marginTop > element.sticky.container.rect.top + element.sticky.container.offsetHeight) {\n        if (element.sticky.stickyClass) {\n          element.classList.remove(element.sticky.stickyClass);\n        }\n\n        this.css(element, {\n          top: element.sticky.container.rect.top + element.sticky.container.offsetHeight - (this.scrollTop + element.sticky.rect.height) + 'px'\n        });\n      } else {\n        if (element.sticky.stickyClass) {\n          element.classList.add(element.sticky.stickyClass);\n        }\n\n        this.css(element, {\n          top: element.sticky.marginTop + 'px'\n        });\n      }\n    } else {\n      if (element.sticky.stickyClass) {\n        element.classList.remove(element.sticky.stickyClass);\n      }\n\n      this.css(element, {\n        position: '',\n        width: '',\n        top: '',\n        left: ''\n      });\n\n      if (element.sticky.wrap) {\n        this.css(element.parentNode, {\n          display: '',\n          width: '',\n          height: ''\n        });\n      }\n    }\n  };\n  /**\n   * Function that updates element sticky rectangle (with sticky container), then activate or deactivate element, then update position if it's active\n   * @function\n   */\n\n\n  Sticky.prototype.update = function update() {\n    var _this5 = this;\n\n    this.forEach(this.elements, function (element) {\n      element.sticky.rect = _this5.getRectangle(element);\n      element.sticky.container.rect = _this5.getRectangle(element.sticky.container);\n\n      _this5.activate(element);\n\n      _this5.setPosition(element);\n    });\n  };\n  /**\n   * Destroys sticky element, remove listeners\n   * @function\n   */\n\n\n  Sticky.prototype.destroy = function destroy() {\n    var _this6 = this;\n\n    this.forEach(this.elements, function (element) {\n      _this6.destroyResizeEvents(element);\n\n      _this6.destroyScrollEvents(element);\n\n      delete element.sticky;\n    });\n  };\n  /**\n   * Function that returns container element in which sticky element is stuck (if is not specified, then it's stuck to body)\n   * @function\n   * @param {node} element - Element which sticky container are looked for\n   * @return {node} element - Sticky container\n   */\n\n\n  Sticky.prototype.getStickyContainer = function getStickyContainer(element) {\n    var container = element.parentNode;\n\n    while (!container.hasAttribute('data-sticky-container') && !container.parentNode.querySelector(element.sticky.stickyContainer) && container !== this.body) {\n      container = container.parentNode;\n    }\n\n    return container;\n  };\n  /**\n   * Function that returns element rectangle & position (width, height, top, left)\n   * @function\n   * @param {node} element - Element which position & rectangle are returned\n   * @return {object}\n   */\n\n\n  Sticky.prototype.getRectangle = function getRectangle(element) {\n    this.css(element, {\n      position: '',\n      width: '',\n      top: '',\n      left: ''\n    });\n    var width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n    var height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n    var top = 0;\n    var left = 0;\n\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * Function that returns viewport dimensions\n   * @function\n   * @return {object}\n   */\n\n\n  Sticky.prototype.getViewportSize = function getViewportSize() {\n    return {\n      width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n      height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n    };\n  };\n  /**\n   * Function that updates window scroll position\n   * @function\n   * @return {number}\n   */\n\n\n  Sticky.prototype.updateScrollTopPosition = function updateScrollTopPosition() {\n    this.scrollTop = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0) || 0;\n  };\n  /**\n   * Helper function for loops\n   * @helper\n   * @param {array}\n   * @param {function} callback - Callback function (no need for explanation)\n   */\n\n\n  Sticky.prototype.forEach = function forEach(array, callback) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      callback(array[i]);\n    }\n  };\n  /**\n   * Helper function to add/remove css properties for specified element.\n   * @helper\n   * @param {node} element - DOM element\n   * @param {object} properties - CSS properties that will be added/removed from specified element\n   */\n\n\n  Sticky.prototype.css = function css(element, properties) {\n    for (var property in properties) {\n      if (properties.hasOwnProperty(property)) {\n        element.style[property] = properties[property];\n      }\n    }\n  };\n\n  return Sticky;\n}();\n/**\n * Export function that supports AMD, CommonJS and Plain Browser.\n */\n\n\n(function (root, factory) {\n  if (true) {\n    module.exports = factory;\n  } else {}\n})(this, Sticky);\n\n//# sourceURL=webpack:///./node_modules/sticky-js/dist/sticky.compile.js?");

/***/ }),

/***/ "./node_modules/sticky-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/sticky-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Sticky = __webpack_require__(/*! ./dist/sticky.compile.js */ \"./node_modules/sticky-js/dist/sticky.compile.js\");\n\nmodule.exports = Sticky;\n\n//# sourceURL=webpack:///./node_modules/sticky-js/index.js?");

/***/ })

/******/ });